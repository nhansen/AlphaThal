#!/bin/bash
# Create and submit a swarm command file to run sh.download_and_match_to_anchors on run accessions

# Biosample is the value in column 26 of the SRAHumanPacBio linux file
export BIOSAMPLE=$1
export SAMPLENAME=$2

export TARGETNAME=SVA_discovery

export SRRFILE=/data/nhansen/HERV_K_catalog/SRAHumanPacBioWGSRuns.linux.051119.txt # master file of long read datasets

export ACCFILE=SRR_Acc_List.txt # a file of run accessions that will be created in the sample directory
export SCRIPTSDIR=/data/nhansen/HERV_K_catalog/$TARGETNAME/scripts
export SEQFILE=/data/nhansen/HERV_K_catalog/$TARGETNAME/prep/anchor_baits/ref_and_nonref_baits.flank.fasta
export BAITREGIONS=/data/nhansen/HERV_K_catalog/$TARGETNAME/prep/anchor_baits/ref_and_nonref_baits.bed
export SAMPLEDIR=/data/nhansen/HERV_K_catalog/$TARGETNAME/refgenotype/$SAMPLENAME
export REPEATELEMENTSEQ=/data/nhansen/HERV_K_catalog/$TARGETNAME/prep/SVA_general_consensus_sequence.fasta

mkdir $SAMPLEDIR
cd $SAMPLEDIR
awk -F"\t" '$26==ENVIRON["BIOSAMPLE"] {OFS="\t"; print $1, $20}' $SRRFILE > $ACCFILE

export LOGDIR=$PWD/logs
mkdir -p $LOGDIR

export COMMANDS=`mktemp downloadcommands.XXXXXX`;
for acc in `awk -F"\t" '{print $1}' $ACCFILE`; do
    export ACC=$acc
    export PLATFORM=`awk -F"\t" '$1==ENVIRON["ACC"] {print $2}' $ACCFILE`
    if [ ! -s minimap2/$acc.mashmap.minimap.hg19.sort.bam.bai ]; then
        echo $SCRIPTSDIR/sh.download_and_match_to_anchors $acc $SEQFILE $SAMPLEDIR \"$PLATFORM\" $REPEATELEMENTSEQ >> $COMMANDS;
    fi
done

if [ -s $COMMANDS ]; then
    swarm --job-name downloadandmatch --time 16:00:00 --logdir $LOGDIR --maxrunning 50 -f $COMMANDS -g 16 > $COMMANDS.swarmsubmit.out;
    export JOBID=`awk '{print $1}' $COMMANDS.swarmsubmit.out`;
    sbatch --dependency=afterok:$JOBID --time=24:00:00 $SCRIPTSDIR/sh.checkdownload $SAMPLENAME $SAMPLEDIR > checkdownload.sbatchsubmit.out
    export CDJOBID=`awk '{print $1}' checkdownload.sbatchsubmit.out`
    sbatch --dependency=afterok:$JOBID --time=16:00:00 $SCRIPTSDIR/sh.mergeandindexminimap $SAMPLENAME $SAMPLEDIR/minimap2 > read_mm2.sbatchsubmit.out
    export MM2JOBID=`awk '{print $1}' read_mm2.sbatchsubmit.out`;
    sbatch --dependency=afterok:$MM2JOBID,afterok:$CDJOBID --time=16:00:00 --mem=18g $SCRIPTSDIR/sh.create_read_table $SAMPLENAME $SAMPLEDIR $BAITREGIONS > create_reads.sbatchsubmit.out
    export CRJOBID=`awk '{print $1}' create_reads.sbatchsubmit.out`;
    sbatch --dependency=afterok:$CRJOBID $SCRIPTSDIR/sh.launch_canu_correct $SAMPLENAME $SAMPLEDIR
    #sbatch --dependency=afterok:$CRJOBID $SCRIPTSDIR/sh.launch_wtdbg_jobs $SAMPLENAME $SAMPLEDIR
else
    echo "No commands to submit";
    rm $COMMANDS;
fi
